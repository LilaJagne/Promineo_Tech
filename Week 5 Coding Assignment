//Coding Steps:
	//Create a menu app as seen in this weekâ€™s video. What you create is up to you as long as it meets the following requirements:
	//Use at least one array.
	//Use at least two classes.
	//Your menu should have the options to create, view, and delete elements.



//create desert menu app where customers can order out of 3 menu items
//use array to reflect how many of each desert items the two customers (linda & Eric) order
//create second class where customers can customize their desert 
//(add toppins for example) add topping options

//**linda adds topping to her ice cream desert (options are: nuts, chocholote chips, caramel sauce)
//Eric also adds toppings but then changes his mind (delete)



class Menuapp{
	constructor (desert, options) {
		this.desert = menu;
		this.options = vanillaIceCream, lavaCake, fudgeBrownie;

	}
describe() {

	return `${this.menu} list ${this.options}.`;

}
}


class Customers {
	constructor (customer1, customer2) {
		this.customers = ('Linda', 'Mark')
		this.customer1 = 'Linda';
		this.customer2 = 'Mark';
		this.foodOrdered = [];

	}	

	addOrder(customer) {
		if (customer instanceof Customer) {
			this.customers.push(foodOrdered); 
		} else {
			throw new Error('You can only add and instance of customer,. Argument is not a customer ${customer}');

		}

			}

}

describe(){

	return `${this.customer1} ordered ${this.options}.`;

}

//create class that will list items and toppings linda will order

class LindaOrders {
     
	constructor (vanillaIcecream, topping1, topping2) {
		this.topping1 = nuts; 
		this.topping2 = caramelSauce;
		this.vanillaIcecream = vanillaIcecream;

	}
}

	describe();{
		return `From the menu ${this.customer1} would like to order ${this.vanillaIcecream}, add a topping ${this.topping1} & ${this.topping2}.`;
	}

//using 1st array to showcase 1st customer not making any orders from menu 

class Menuapp {
	constructor() {
		this.options = [];
		this.customer2 = null; 
	}
}


//haven't a clue what i am doing or what is going on
start() {
let selection = this.showMainMenuOptions();

while (selection != 0) {
	switch (selection) { //what is a switch
	case '1' :
		this.createCustomerOptions1();
		break;
	case '2' :
		this.showCustomerOptions2();
		break; 
	case '3':
		this.deleteCustomerOptios2();
		break;
	case '4' :
		this.viewCustomerOptions1();
		break;
		default:
		selection = 0;

	}
		selection = this.showMainMenuOptions();
		
		}
		alert ('Thank You!');
	}

showMainMenuOptions() {
	return promt(`
		0) exit
		1) create new team
		2) 	

	
	`); 

}
		
